version: '3'

services:

  postgres_korek:
    build: ./database
    environment:
      - POSTGRES_DB=korek_db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: 'bitnami/redis:5.0-debian-9'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/bitnami/redis/data
    command: /run.sh --maxmemory 500mb

  web_socket:
    restart: always
    build: ./django-notifier
    environment:
      - DEBUG=True
    links:
      - postgres_korek
      - redis
    depends_on:
      - postgres_korek
      - redis
      - web_rest
    ports:
      - "8000:8000"

  postgres_interface:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    links:
      - postgres_korek:postgres
    ports:
      - "5050:80"

  web_rest:
    restart: always
    build: ./django-rest-swagger
    environment:
      - DEBUG=True
      # PUBLIC PRIVATE PRIVATE-VALIDATION
      - PRIVACY_MODE=PRIVATE-VALIDATION
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_HOST_USER=xxxx.yyy@gmail.com
      - EMAIL_HOST_PASSWORD=changeme
    links:
      - postgres_korek
    depends_on:
      - postgres_korek
    volumes:
      - media:/code/myapp/app/media/

  nginx:
    build: ./nginx
    depends_on:
      - web_socket
    volumes:
      - media:/media/:ro
      - ssl_cetificate:/etc/letsencrypt/
    ports:
      - "80:80"
      - "443:443"


  # Logs Monitoring
  logs:
    build: ./monitoring/logs
    privileged: true
    depends_on:
      - nginx
      - influxdb
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  influxdb:
    image: influxdb:1.7
    ports:
      - "8083:8083"
      - "8086:8086"
      - "25826:25826/udp"
    volumes:
      - influxdata:/var/lib/influxdb
      - ./monitoring/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
      - ./monitoring/influxdb/types.db:/usr/share/collectd/types.db:ro


  # Metrics Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
      - nginx-exporter
      - node-exporter
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
      - nginx-exporter:nginx-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name:  node-exporter

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.4.0
    container_name: nginx-exporter
    depends_on:
      - nginx
    environment:
      - SCRAPE_URI=http://nginx/nginx_status?auto

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - nginx


  # Display Logs & Metrics
  grafana:
    image: grafana/grafana:5.3.2
    depends_on:
      - prometheus
      - postgres_korek
      - cadvisor
    links:
      - postgres_korek:postgres
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/:/var/lib/grafana/
    user: $USER
      

volumes:
  pgdata: {}
  influxdata: {}
  redis_data: {}
  serverlog: {}
  media: {}
  ssl_cetificate: {}