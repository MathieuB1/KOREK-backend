env:
  DOCKER_COMPOSE_VERSION: 1.8.0
before_install:
  # update is required to update the repositories to see the new packages for
  # Docker.
  - sudo apt-get update
# Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install docker-ce
# As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
# Check that docker-compose is now running the latest version (or at least the
  # one we specified). This is not to be confused with the version we printed
  # before doing the update.
  - docker-compose --version
# Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker-compose build
  - docker-compose up -d
# You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - sleep 5 && docker ps

script:
  - sleep 30 && docker exec -it $(docker ps | grep web_rest_1 | awk '{print $NF}') /bin/bash -c "cd /code && python runtests.py"
